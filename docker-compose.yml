version: "3.8"

services:
  backend:
    image: hiennguyen9874/stockk-go:${SERVER_APP_VERSION}-dev
    build:
      context: backend
      dockerfile: Dockerfile
    command: sh -c "wait-for-it -w db:5432 -w redis:6379 -w influxdb:8086 -t 5 -- go run main.go migrate && go run main.go initdata && air -c .air.toml serve"
    ports:
      - ${SERVER_PORT}:${SERVER_PORT}
    volumes:
      - ./backend:/app
    depends_on:
      - db
      - redis
      - influxdb
    env_file:
      - ${COMPOSE_ENV_FILE}

  worker:
    image: hiennguyen9874/stockk-go:${SERVER_APP_VERSION}-dev
    build:
      context: backend
      dockerfile: Dockerfile
    command: sh -c "wait-for-it -w db:5432 -w redis:6379 -- sleep 10; go run main.go worker"
    volumes:
      - ./backend:/app
    depends_on:
      - db
      - redis
    env_file:
      - ${COMPOSE_ENV_FILE}

  symbol-crawler:
    image: hiennguyen9874/stockk-go:${SERVER_APP_VERSION}-dev
    build:
      context: backend
      dockerfile: Dockerfile
    command: sh -c "wait-for-it -w db:5432 -w redis:6379 -w influxdb:8086 -t 5 -- sleep 10; go run main.go migrate && go run main.go crawlsymbol"
    volumes:
      - ./backend:/app
    depends_on:
      - db
      - redis
      - influxdb
      - backend
    env_file:
      - ${COMPOSE_ENV_FILE}

  history-crawler-d:
    image: hiennguyen9874/stockk-go:${SERVER_APP_VERSION}-dev
    build:
      context: backend
      dockerfile: Dockerfile
    command: sh -c "wait-for-it -w db:5432 -w redis:6379 -w influxdb:8086 -t 5 -- sleep 30; go run main.go migrate && go run main.go crawlhistoryd"
    volumes:
      - ./backend:/app
    depends_on:
      - db
      - redis
      - influxdb
      - backend
    env_file:
      - ${COMPOSE_ENV_FILE}

  history-crawler-m:
    image: hiennguyen9874/stockk-go:${SERVER_APP_VERSION}-dev
    build:
      context: backend
      dockerfile: Dockerfile
    command: sh -c "wait-for-it -w db:5432 -w redis:6379 -w influxdb:8086 -t 5 -- sleep 120; go run main.go migrate && go run main.go crawlhistorym"
    volumes:
      - ./backend:/app
    depends_on:
      - db
      - redis
      - influxdb
      - backend
    env_file:
      - ${COMPOSE_ENV_FILE}

  db:
    image: postgres:15.2-alpine
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DBNAME}
    expose:
      - 5432
    volumes:
      - app-postgres-data:/var/lib/postgresql/data/
    restart: unless-stopped

  # redis:
  #   image: redis:7-alpine
  #   expose:
  #     - 6579
  #   volumes:
  #     - app-redis-data:/data
  #   restart: unless-stopped

  # redisinsight:
  #   image: redislabs/redisinsight:1.13.1
  #   ports:
  #     - 8001:8001
  #   volumes:
  #     - app-redisinsight-data:/db
  #   depends_on:
  #     - redis

  redis:
    image: redis/redis-stack:7.0.0-RC4
    expose:
      - 6379
    volumes:
      - app-redis-data:/data
    ports:
      - 8001:8001
    restart: unless-stopped

  # pgadmin:
  #   image: dpage/pgadmin4
  #   depends_on:
  #     - db
  #   expose:
  #     - 5050
  #   ports:
  #     - 5050:5050
  #   environment:
  #     - PGADMIN_LISTEN_PORT=5050
  #     - PGADMIN_DEFAULT_EMAIL=admin@gmail.com
  #     - PGADMIN_DEFAULT_PASSWORD=admin
  #   volumes:
  #     - app-pgadmin-data:/var/lib/pgadmin
  #   restart: unless-stopped

  influxdb:
    build:
      context: influxdb
      dockerfile: Dockerfile
      args:
        INFLUXDB_VERSION: 2.6-alpine
    environment:
      DOCKER_INFLUXDB_INIT_MODE: setup
      DOCKER_INFLUXDB_INIT_USERNAME: ${INFLUX_DB_USERNAME}
      DOCKER_INFLUXDB_INIT_PASSWORD: ${INFLUX_DB_PASSWORD}
      DOCKER_INFLUXDB_INIT_ADMIN_TOKEN: ${INFLUX_DB_TOKEN}
      DOCKER_INFLUXDB_INIT_ORG: ${INFLUX_DB_ORG}
      DOCKER_INFLUXDB_INIT_BUCKET: ResolutionD
    expose:
      - 8086
    ports:
      - 8086:8086
    volumes:
      - app-influxdb-data:/var/lib/influxdb2:rw
      - app-influxdb-config:/etc/influxdb2:rw

volumes:
  app-postgres-data:
  app-redisinsight-data:
  app-redis-data: # app-pgadmin-data:
  app-influxdb-data:
  app-influxdb-config:
